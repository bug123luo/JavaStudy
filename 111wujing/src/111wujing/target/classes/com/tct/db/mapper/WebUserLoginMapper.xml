<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tct.db.mapper.WebUserLoginMapper">
  <resultMap id="BaseResultMap" type="com.tct.db.po.WebUserLogin">
    <id column="web_user_id" jdbcType="INTEGER" property="webUserId" />
    <result column="web_ip" jdbcType="CHAR" property="webIp" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="logintime" jdbcType="TIMESTAMP" property="logintime" />
    <result column="logouttime" jdbcType="TIMESTAMP" property="logouttime" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    web_user_id, web_ip, state, logintime, logouttime, version
  </sql>
  <select id="selectByExample" parameterType="com.tct.db.po.WebUserLoginExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from web_user_login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from web_user_login
    where web_user_id = #{webUserId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from web_user_login
    where web_user_id = #{webUserId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tct.db.po.WebUserLoginExample">
    delete from web_user_login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tct.db.po.WebUserLogin">
    insert into web_user_login (web_user_id, web_ip, state, 
      logintime, logouttime, version
      )
    values (#{webUserId,jdbcType=INTEGER}, #{webIp,jdbcType=CHAR}, #{state,jdbcType=INTEGER}, 
      #{logintime,jdbcType=TIMESTAMP}, #{logouttime,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tct.db.po.WebUserLogin">
    insert into web_user_login
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="webUserId != null">
        web_user_id,
      </if>
      <if test="webIp != null">
        web_ip,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="logintime != null">
        logintime,
      </if>
      <if test="logouttime != null">
        logouttime,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="webUserId != null">
        #{webUserId,jdbcType=INTEGER},
      </if>
      <if test="webIp != null">
        #{webIp,jdbcType=CHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="logintime != null">
        #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="logouttime != null">
        #{logouttime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tct.db.po.WebUserLoginExample" resultType="java.lang.Long">
    select count(*) from web_user_login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update web_user_login
    <set>
      <if test="record.webUserId != null">
        web_user_id = #{record.webUserId,jdbcType=INTEGER},
      </if>
      <if test="record.webIp != null">
        web_ip = #{record.webIp,jdbcType=CHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.logintime != null">
        logintime = #{record.logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.logouttime != null">
        logouttime = #{record.logouttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update web_user_login
    set web_user_id = #{record.webUserId,jdbcType=INTEGER},
      web_ip = #{record.webIp,jdbcType=CHAR},
      state = #{record.state,jdbcType=INTEGER},
      logintime = #{record.logintime,jdbcType=TIMESTAMP},
      logouttime = #{record.logouttime,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tct.db.po.WebUserLogin">
    update web_user_login
    <set>
      <if test="webIp != null">
        web_ip = #{webIp,jdbcType=CHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="logintime != null">
        logintime = #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="logouttime != null">
        logouttime = #{logouttime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where web_user_id = #{webUserId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tct.db.po.WebUserLogin">
    update web_user_login
    set web_ip = #{webIp,jdbcType=CHAR},
      state = #{state,jdbcType=INTEGER},
      logintime = #{logintime,jdbcType=TIMESTAMP},
      logouttime = #{logouttime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER}
    where web_user_id = #{webUserId,jdbcType=INTEGER}
  </update>
</mapper>